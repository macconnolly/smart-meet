# Pytest configuration for Cognitive Meeting Intelligence System

[tool:pytest]
# Test discovery
minversion = 7.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -ra
    --strict-markers
    --strict-config
    --tb=short
    --cov=src
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
    --maxfail=5
    --ff
    -p no:warnings
    --durations=10

# Asyncio configuration
asyncio_mode = auto

# Markers
markers =
    unit: Unit tests
    integration: Integration tests requiring external services
    slow: Tests that take > 5 seconds
    api: API endpoint tests
    cognitive: Cognitive algorithm tests
    database: Database interaction tests
    vector: Vector store tests
    extraction: Memory extraction tests
    performance: Performance benchmarks
    smoke: Quick smoke tests
    security: Security-related tests
    skip_ci: Skip in CI environment

# Coverage configuration embedded
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*.py
    */__init__.py

# Test output
console_output_style = progress

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout
timeout = 300
timeout_method = thread

# Filtering
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning